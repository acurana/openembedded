diff -urN linux-2.6.30-0rig/arch/arm/mach-at91/at91sam9g45_devices.c linux-2.6.30/arch/arm/mach-at91/at91sam9g45_devices.c
--- linux-2.6.30-0rig/arch/arm/mach-at91/at91sam9g45_devices.c	2009-08-19 23:22:58.000000000 +0200
+++ linux-2.6.30/arch/arm/mach-at91/at91sam9g45_devices.c	2009-08-19 23:34:24.000000000 +0200
@@ -548,6 +548,59 @@
 void __init at91_add_device_spi(struct spi_board_info *devices, int nr_devices) {}
 #endif
 
+/* --------------------------------------------------------------------
+ *  AC97
+ * -------------------------------------------------------------------- */
+
+#if defined(CONFIG_SND_AT91_AC97) || defined(CONFIG_SND_AT91_AC97_MODULE)
+static u64 ac97_dmamask = DMA_BIT_MASK(32);
+static struct atmel_ac97_data ac97_data;
+
+static struct resource ac97_resources[] = {
+	[0] = {
+		.start	= AT91SAM9G45_BASE_AC97C,
+		.end	= AT91SAM9G45_BASE_AC97C + SZ_16K - 1,
+		.flags	= IORESOURCE_MEM,
+	},
+	[1] = {
+		.start	= AT91SAM9G45_ID_AC97C,
+		.end	= AT91SAM9G45_ID_AC97C,
+		.flags	= IORESOURCE_IRQ,
+	},
+};
+
+static struct platform_device at91sam9g45_ac97_device = {
+	.name		= "ac97c",
+	.id		= 1,
+	.dev		= {
+				.dma_mask		= &ac97_dmamask,
+				.coherent_dma_mask	= DMA_BIT_MASK(32),
+				.platform_data		= &ac97_data,
+	},
+	.resource	= ac97_resources,
+	.num_resources	= ARRAY_SIZE(ac97_resources),
+};
+
+void __init at91_add_device_ac97(struct atmel_ac97_data *data)
+{
+	if (!data)
+		return;
+
+	at91_set_A_periph(AT91_PIN_PD8, 0);	/* AC97FS */
+	at91_set_A_periph(AT91_PIN_PD9, 0);	/* AC97CK */
+	at91_set_A_periph(AT91_PIN_PD7, 0);	/* AC97TX */
+	at91_set_A_periph(AT91_PIN_PD6, 0);	/* AC97RX */
+
+	/* reset */
+	if (data->reset_pin)
+		at91_set_gpio_output(data->reset_pin, 0);
+
+	ac97_data = *data;
+	platform_device_register(&at91sam9g45_ac97_device);
+}
+#else
+void __init at91_add_device_ac97(struct atmel_ac97_data *data) {}
+#endif
 
 /* --------------------------------------------------------------------
  *  LCD Controller
diff -urN linux-2.6.30-0rig/arch/arm/mach-at91/at91sam9g45.c linux-2.6.30/arch/arm/mach-at91/at91sam9g45.c
--- linux-2.6.30-0rig/arch/arm/mach-at91/at91sam9g45.c	2009-08-20 12:07:41.000000000 +0200
+++ linux-2.6.30/arch/arm/mach-at91/at91sam9g45.c	2009-08-20 12:27:20.000000000 +0200
@@ -120,6 +120,11 @@
 	.pmc_mask	= 1 << AT91SAM9G45_ID_SSC1,
 	.type		= CLK_TYPE_PERIPHERAL,
 };
+
+
+
+
+
 static struct clk tcb_clk = {
 	.name		= "tcb_clk",
 	.pmc_mask	= 1 << AT91SAM9G45_ID_TCB,
@@ -200,6 +205,7 @@
 	&spi1_clk,
 	&ssc0_clk,
 	&ssc1_clk,
+	&ac97_clk,
 	&tcb_clk,
 	&pwm_clk,
 	&tsc_clk,
@@ -331,6 +337,7 @@
 	5,	/* Serial Peripheral Interface 1 */
 	4,	/* Serial Synchronous Controller 0 */
 	4,	/* Serial Synchronous Controller 1 */
+	5,	/* AC97 Controller */
 	0,	/* Timer Counter 0, 1, 2, 3, 4 and 5 */
 	0,	/* Pulse Width Modulation Controller */
 	0,	/* Touch Screen Controller */
diff -urN linux-2.6.30-0rig/arch/arm/mach-at91/board-sam9m10g45ek.c linux-2.6.30/arch/arm/mach-at91/board-sam9m10g45ek.c
--- linux-2.6.30-0rig/arch/arm/mach-at91/board-sam9m10g45ek.c	2009-08-20 12:07:41.000000000 +0200
+++ linux-2.6.30/arch/arm/mach-at91/board-sam9m10g45ek.c	2009-08-20 12:35:20.000000000 +0200
@@ -355,7 +355,18 @@
 #endif
 };
 
+/*
+ * AC97
+ * AC97.reset is connected to system reset on the SAM9RL.
+ * The SAM9RL cannot reset the Codec.
+ * Keep it in the driver, if someone wants to have this function.
+ * PC0 is not used, 
+ * so it does not hurt to use this for now
+ */
 
+static struct atmel_ac97_data ek_ac97_data = {
+	.reset_pin	= AT91_PIN_PC0,
+};
 
 static void __init ek_board_init(void)
 {
@@ -380,6 +391,8 @@
 	/* LEDs */
 	at91_gpio_leds(ek_leds, ARRAY_SIZE(ek_leds));
 	at91_pwm_leds(ek_pwm_led, ARRAY_SIZE(ek_pwm_led));
+	/* AC97 */
+	at91_add_device_ac97(&ek_ac97_data);
 }
 
 MACHINE_START(AT91SAM9G45EKES, "Atmel AT91SAM9G45-EKES")

